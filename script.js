/* ===== OverNight Demo ‚Äì script.js (hardened) =====
   ‚Ä¢ Kh√¥ng ghi c·ª©ng API-KEY trong m√£ ngu·ªìn public
   ‚Ä¢ To√†n b·ªô log nh·∫°y c·∫£m ƒë√£ lo·∫°i b·ªè
   ‚Ä¢ Th√™m throttling ƒë∆°n gi·∫£n tr√°nh spam
*/

/* ---------- C·∫•u h√¨nh ---------- */
const API_URL = "https://overnight-api-beta.vercel.app/solve";

/*  
   üëâ C√°ch n·∫°p KEY an to√†n:
   1) T·∫°o file .env local (kh√¥ng commit):
        VITE_OVN_KEY=your_secret_key
   2) D√πng bundler (Vite, webpack) ƒë·ªÉ inject:
        const API_KEY = import.meta.env.VITE_OVN_KEY;
   3) Ho·∫∑c t·∫°m th·ªùi g√°n th·ªß c√¥ng d∆∞·ªõi ƒë√¢y r·ªìi xo√° tr∆∞·ªõc khi public.
*/
const API_KEY = "REPLACE_WITH_KEY";

/* ---------- Throttling: 1 request / 2 s ---------- */
let lastCall = 0;
function canCall() {
  const now = Date.now();
  if (now - lastCall < 2000) return false;
  lastCall = now;
  return true;
}

/* ---------- H√†m x·ª≠ l√Ω ch√≠nh ---------- */
async function solve() {
  const xInput   = document.getElementById("x");
  const resultEl = document.getElementById("result");
  const x        = Number(xInput.value);

  /* Ki·ªÉm tra ƒë·∫ßu v√†o */
  if (!x || x <= 2 || x % 2 !== 0) {
    resultEl.innerText = "Vui l√≤ng nh·∫≠p s·ªë ch·∫µn l·ªõn h∆°n 2";
    return;
  }
  const MAX = 2 ** 53;
  if (x > MAX) {
    resultEl.innerText =
      "Gi·ªõi h·∫°n th·ª≠ nghi·ªám l√† 2^53 (do m√°y t√≠nh), kh√¥ng ph·∫£i gi·ªõi h·∫°n c·ªßa thu·∫≠t to√°n OverNight.";
    return;
  }

  /* Throttling */
  if (!canCall()) {
    resultEl.innerText = "ƒêang ch·ªù‚Ä¶ vui l√≤ng th·ª≠ l·∫°i sau 2 gi√¢y.";
    return;
  }

  /* G·ªçi API */
  try {
    resultEl.innerText = "ƒêang x·ª≠ l√Ω‚Ä¶";

    const url = `${API_URL}?x=${x}&key=${API_KEY}`;
    const res = await fetch(url, { method: "GET" });

    if (!res.ok) {
      resultEl.innerText = "Kh√¥ng truy c·∫≠p ƒë∆∞·ª£c API.";
      return;
    }
    const data = await res.json();

    if (data?.a && data?.b && data.x === x) {
      resultEl.innerText = `${x} = ${data.a} + ${data.b}`;
    } else {
      resultEl.innerText = "Kh√¥ng t√¨m th·∫•y nghi·ªám ph√π h·ª£p.";
    }
  } catch {
    resultEl.innerText = "ƒê√£ x·∫£y ra l·ªói k·∫øt n·ªëi ho·∫∑c x·ª≠ l√Ω.";
  }
}
<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Thu·∫≠t to√°n OverNight</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="container">
    <div class="column">
      <h2>Th·ª≠ nghi·ªám thu·∫≠t to√°n</h2>
      <label for="input">Nh·∫≠p s·ªë ch·∫µn x:</label>
      <input id="input" type="text" />
      <div class="button-group">
        <button onclick="findPair()">T√¨m A + B</button>
        <button onclick="stopFetch()">‚õî D·ª´ng t√≠nh to√°n</button>
      </div>
      <div id="result">K·∫øt qu·∫£ s·∫Ω hi·ªÉn th·ªã t·∫°i ƒë√¢y...</div>
      <div class="log10info" id="loginfo"></div>
      <div class="note">
        üåç Th·∫ø gi·ªõi ƒë√£ ki·ªÉm ch·ª©ng ƒë·∫øn x = 10<sup>18</sup>. T·∫°i ƒë√¢y, t√¥i gi·ªõi h·∫°n ƒë·∫øn 10<sup>20</sup> ƒë·ªÉ b·∫£o v·ªá API.  
        ‚ö° Tuy nhi√™n, ·ªü n∆°i kh√°c t√¥i ƒë√£ ki·ªÉm ch·ª©ng v·ªõi x ‚âà 10<sup>72</sup>, tr·∫£ v·ªÅ k·∫øt qu·∫£ ch·ªâ trong ~5 gi√¢y b·∫±ng m√°y t√≠nh c√° nh√¢n.  
        üß™ ƒê√¢y l√† ki·ªÉm ch·ª©ng th·ª±c hi·ªán b·∫±ng Python, c√≥ gi·ªõi h·∫°n k·ªπ thu·∫≠t.
      </div>
    </div>

    <div class="column">
      <img src="author.jpg" alt="Author" class="author-img"/>
      <h3>Th√¥ng tin t√°c gi·∫£</h3>
      <p><strong>T√™n:</strong> Le Hung Dan</p>
      <p><strong>Qu·ªëc t·ªãch:</strong> Vi·ªát Nam</p>
      <p><strong>Email:</strong> snakenidalee@gmail.com</p>
      <p><strong>Bi·ªát danh h√†nh tr√¨nh:</strong> OverNight Project</p>
      <p><strong>Vai tr√≤:</strong> Ng∆∞·ªùi ƒë·∫ßu ti√™n c√¥ng b·ªë l·ªùi gi·∫£i cho thu·∫≠t to√°n OverNight b·∫±ng l√Ω thuy·∫øt t·∫≠p h·ª£p, thu·∫≠t to√°n v√† th·ª±c nghi·ªám.</p>
      <p class="share">‚ÄúT√¥i kh√¥ng ph·∫£i nh√† to√°n h·ªçc... N·∫øu b·∫°n th·∫•y ƒëi·ªÅu n√†y h·ª£p l√Ω, xin h√£y gi√∫p lan t·ªèa.‚Äù</p>
    </div>

    <div class="column">
      <h3>Tuy√™n b·ªë & Gi·∫£i th√≠ch</h3>
      <p>D·ª± √°n OverNight l√† m·ªôt kh√°m ph√° ƒë·ªôc l·∫≠p... Thu·∫≠t to√°n kh√¥ng ƒë∆∞·ª£c c√¥ng b·ªë c√¥ng khai m√† ƒë∆∞·ª£c ki·ªÉm ch·ª©ng qua API b·∫£o m·∫≠t.</p>
      <p>M·ªçi l·ªùi g·ªçi API th·ª±c hi·ªán theo th·ªùi gian th·ª±c, kh√¥ng ti·∫øt l·ªô thu·∫≠t to√°n th·∫≠t.</p>
    </div>
  </div>

  <script>
    let controller;

    function stopFetch() {
      if (controller) {
        controller.abort();
        document.getElementById("result").innerText = "‚õî ƒê√£ d·ª´ng t√≠nh to√°n.";
        document.getElementById("loginfo").innerText = "";
      }
    }

    function findPair() {
      const input = document.getElementById("input").value;
      const x = BigInt(input);
      const log10 = Math.floor(Math.log10(Number(x)));
      document.getElementById("loginfo").innerText = `üî¢ Con s·ªë b·∫°n v·ª´a th·ª≠ s·∫•p x·ªâ 10^${log10}`;

      document.getElementById("result").innerText = "‚è≥ ƒêang t√¨m nghi·ªám...";

      controller = new AbortController();

      fetch(`https://overnight-api-57tf.vercel.app/solve?x=${x.toString()}`, {
        signal: controller.signal
      })
        .then(response => response.json())
        .then(data => {
          if (data.status === "success") {
            document.getElementById("result").innerText = `‚úÖ T√¨m ƒë∆∞·ª£c: ${data.sum}`;
          } else {
            document.getElementById("result").innerText = "‚ùå Kh√¥ng t√¨m th·∫•y nghi·ªám ph√π h·ª£p.";
          }
        })
        .catch(error => {
          if (error.name === "AbortError") return;
          document.getElementById("result").innerText = "‚ùå L·ªói k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.";
        });
    }
  </script>
</body>
</html>
